{"version":3,"sources":["helpers.ts","components/Navbar.tsx","components/Layout.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTableRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getNavLinkClass","isActive","classNames","Navbar","memo","className","role","to","Layout","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","name","sex","PeopleTableRow","selectedPersonSlug","born","died","mother","motherName","father","fatherName","columnHeadings","PeopleTable","people","map","heading","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useParams","useEffect","peopleFromAfar","find","getPreparedPeople","catch","finally","hasPeople","length","isRequestSuccessful","NotFoundPage","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d2c10e02.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Person } from './types';\n\nexport function getPreparedPeople(people: Person[]): Person[] {\n  return people.map(person => {\n    const mother = people.find(({ name }) => name === person.motherName);\n    const father = people.find(({ name }) => name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n}\n\nexport function getNavLinkClass({ isActive }: { isActive: boolean }) {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n}\n","import { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getNavLinkClass } from '../helpers';\n\nexport const Navbar = memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={getNavLinkClass}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={getNavLinkClass}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n));\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './Navbar';\n\nexport const Layout = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nconst SEX_FEMALE = 'f';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === SEX_FEMALE,\n      })}\n    >\n      {name}\n    </Link>\n  );\n});\n","import { memo } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nconst EMPTY_VALUE = '-';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug?: string;\n};\n\nexport const PeopleTableRow: React.FC<Props> = memo(({\n  person,\n  selectedPersonSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === selectedPersonSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName ?? EMPTY_VALUE}\n      </td>\n\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName ?? EMPTY_VALUE}\n      </td>\n    </tr>\n  );\n});\n","import { memo } from 'react';\nimport { Person } from '../types';\nimport { PeopleTableRow } from './PeopleTableRow';\n\nconst columnHeadings = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n\ntype Props = {\n  people: Person[];\n  selectedPersonSlug?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = memo(({\n  people,\n  selectedPersonSlug,\n}) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        {columnHeadings.map(heading => (\n          <th key={heading}>{heading}</th>\n        ))}\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PeopleTableRow\n          key={person.slug}\n          person={person}\n          selectedPersonSlug={selectedPersonSlug}\n        />\n      ))}\n    </tbody>\n  </table>\n));\n","import { memo, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getPreparedPeople } from '../helpers';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = memo(() => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromAfar => setPeople(getPreparedPeople(peopleFromAfar)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const hasPeople = !!people.length;\n  const isRequestSuccessful = !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isRequestSuccessful && (\n            hasPeople\n              ? <PeopleTable people={people} selectedPersonSlug={slug} />\n              : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport {\n  Layout,\n  HomePage,\n  PeoplePage,\n  NotFoundPage,\n} from './components';\n\nimport './App.scss';\n\nexport const App = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<HomePage />} />\n\n      <Route path=\"people\">\n        <Route path=\":slug?\" element={<PeoplePage />} />\n      </Route>\n\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}