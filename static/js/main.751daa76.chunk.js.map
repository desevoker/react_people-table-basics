{"version":3,"sources":["components/Navbar.tsx","components/Layout.tsx","components/HomePage.tsx","helpers.ts","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","classNames","Layout","HomePage","isFemale","person","sex","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","slug","name","PeopleTable","people","selected","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useParams","useEffect","peopleFromAfar","find","newPerson","preparePeople","catch","finally","hasPeople","length","isAllOk","NotFoundPage","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.751daa76.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './Navbar';\n\nexport const Layout = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types';\n\nexport function preparePeople(people: Person[]): Person[] {\n  return people.map(person => {\n    const mother = people.find(({ name }) => name === person.motherName);\n    const father = people.find(({ name }) => name === person.fatherName);\n\n    const newPerson = { ...person };\n\n    if (mother) {\n      newPerson.mother = { ...mother };\n    }\n\n    if (father) {\n      newPerson.father = { ...father };\n    }\n\n    return newPerson;\n  });\n}\n\nexport function isFemale(person: Person) {\n  return person.sex === 'f';\n}\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { isFemale } from '../helpers';\n\ntype Props = {\n  person: Person | string | null | undefined;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (typeof person === 'string' || !person) {\n    return <>{person ?? '-'}</>;\n  }\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': isFemale(person),\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  selected?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selected }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === selected,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              <PersonLink person={person.mother ?? person.motherName} />\n            </td>\n\n            <td>\n              <PersonLink person={person.father ?? person.fatherName} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { preparePeople } from '../helpers';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromAfar => setPeople(preparePeople(peopleFromAfar)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const hasPeople = people.length > 0;\n  const isAllOk = !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isAllOk && (\n            hasPeople\n              ? <PeopleTable people={people} selected={slug} />\n              : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport {\n  Layout,\n  HomePage,\n  PeoplePage,\n  NotFoundPage,\n} from './components';\n\nimport './App.scss';\n\nexport const App = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<HomePage />} />\n\n      <Route path=\"people\">\n        <Route path=\":slug?\" element={<PeoplePage />} />\n      </Route>\n\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}