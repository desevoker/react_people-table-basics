{"version":3,"sources":["components/Navbar.tsx","components/Layout.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","helpers.ts","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","classNames","Layout","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","name","sex","PeopleTable","people","selected","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useParams","useEffect","peopleFromAfar","find","newPerson","preparePeople","catch","finally","hasPeople","length","isRequestSuccessful","NotFoundPage","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.af170497.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './Navbar';\n\nexport const Layout = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nconst EMPTY_VALUE = '-';\nconst SEX_FEMALE = 'f';\n\ntype Props = {\n  person: Person | string | null | undefined;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return <>{EMPTY_VALUE}</>;\n  }\n\n  if (typeof person === 'string') {\n    return <>{person}</>;\n  }\n\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === SEX_FEMALE,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  selected?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selected }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug,\n            sex,\n            born,\n            died,\n            mother,\n            motherName,\n            father,\n            fatherName,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === selected,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                <PersonLink person={mother ?? motherName} />\n              </td>\n\n              <td>\n                <PersonLink person={father ?? fatherName} />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { preparePeople } from '../helpers';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromAfar => setPeople(preparePeople(peopleFromAfar)))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const hasPeople = !!people.length;\n  const isRequestSuccessful = !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isRequestSuccessful && (\n            hasPeople\n              ? <PeopleTable people={people} selected={slug} />\n              : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types';\n\nexport function preparePeople(people: Person[]): Person[] {\n  return people.map(person => {\n    const mother = people.find(({ name }) => name === person.motherName);\n    const father = people.find(({ name }) => name === person.fatherName);\n\n    const newPerson = { ...person };\n\n    if (mother) {\n      newPerson.mother = { ...mother };\n    }\n\n    if (father) {\n      newPerson.father = { ...father };\n    }\n\n    return newPerson;\n  });\n}\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport {\n  Layout,\n  HomePage,\n  PeoplePage,\n  NotFoundPage,\n} from './components';\n\nimport './App.scss';\n\nexport const App = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<HomePage />} />\n\n      <Route path=\"people\">\n        <Route path=\":slug?\" element={<PeoplePage />} />\n      </Route>\n\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}